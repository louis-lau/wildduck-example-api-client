/**
 * WildDuck API
 * WildDuck API docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';

export class AuthenticateRequest {
    /**
    * Username or E-mail address
    */
    'username': string;
    /**
    * Password
    */
    'password': string;
    /**
    * Application identifier for security logs
    */
    'protocol'?: string;
    /**
    * Required scope. One of master, imap, smtp, pop3
    */
    'scope'?: string;
    /**
    * If true then generates a temporary access token that is valid for this user. Only available if scope is \"master\". When using user tokens then you can replace user ID in URLs with \"me\".
    */
    'token'?: boolean;
    /**
    * Session identifier for the logs
    */
    'sess'?: string;
    /**
    * IP address for the logs
    */
    'ip'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "username",
            "baseName": "username",
            "type": "string"
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string"
        },
        {
            "name": "protocol",
            "baseName": "protocol",
            "type": "string"
        },
        {
            "name": "scope",
            "baseName": "scope",
            "type": "string"
        },
        {
            "name": "token",
            "baseName": "token",
            "type": "boolean"
        },
        {
            "name": "sess",
            "baseName": "sess",
            "type": "string"
        },
        {
            "name": "ip",
            "baseName": "ip",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return AuthenticateRequest.attributeTypeMap;
    }
}

