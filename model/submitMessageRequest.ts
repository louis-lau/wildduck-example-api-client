/**
 * WildDuck API
 * WildDuck API docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { Address } from './address';
import { AddressOptionalName } from './addressOptionalName';
import { AttachmentsUpload } from './attachmentsUpload';
import { EnvelopeUpload } from './envelopeUpload';
import { Header } from './header';
import { Reference } from './reference';

export class SubmitMessageRequest {
    'reference'?: Reference;
    /**
    * Mailbox ID where to upload the message. If not set then message is uploaded to Sent Mail folder.
    */
    'mailbox'?: string;
    /**
    * If true then generated message is not added to the sending queue
    */
    'uploadOnly'?: boolean;
    /**
    * If true then treats this message as draft (should be used with uploadOnly=true)
    */
    'isDraft'?: boolean;
    /**
    * Datestring for delivery if message should be sent some later time
    */
    'sendTime'?: Date;
    'envelope'?: EnvelopeUpload;
    'from'?: Address;
    /**
    * Addresses for the To: header
    */
    'to'?: Array<AddressOptionalName>;
    /**
    * Addresses for the Cc: header
    */
    'cc'?: Array<AddressOptionalName>;
    /**
    * Addresses for the Bcc: header
    */
    'bcc'?: Array<AddressOptionalName>;
    /**
    * Message subject. If not then resolved from Reference message
    */
    'subject': string;
    /**
    * Plaintext message
    */
    'text': string;
    /**
    * HTML formatted message
    */
    'html': string;
    /**
    * Custom headers for the message. If reference message is set then In-Reply-To and References headers are set automatically
    */
    'headers'?: Array<Header>;
    /**
    * Attachments for the message
    */
    'attachments'?: Array<AttachmentsUpload>;
    /**
    * Custom metainfo for the message
    */
    'meta'?: object;
    /**
    * Session identifier for the logs
    */
    'sess'?: string;
    /**
    * IP address for the logs
    */
    'ip'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "reference",
            "baseName": "reference",
            "type": "Reference"
        },
        {
            "name": "mailbox",
            "baseName": "mailbox",
            "type": "string"
        },
        {
            "name": "uploadOnly",
            "baseName": "uploadOnly",
            "type": "boolean"
        },
        {
            "name": "isDraft",
            "baseName": "isDraft",
            "type": "boolean"
        },
        {
            "name": "sendTime",
            "baseName": "sendTime",
            "type": "Date"
        },
        {
            "name": "envelope",
            "baseName": "envelope",
            "type": "EnvelopeUpload"
        },
        {
            "name": "from",
            "baseName": "from",
            "type": "Address"
        },
        {
            "name": "to",
            "baseName": "to",
            "type": "Array<AddressOptionalName>"
        },
        {
            "name": "cc",
            "baseName": "cc",
            "type": "Array<AddressOptionalName>"
        },
        {
            "name": "bcc",
            "baseName": "bcc",
            "type": "Array<AddressOptionalName>"
        },
        {
            "name": "subject",
            "baseName": "subject",
            "type": "string"
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string"
        },
        {
            "name": "html",
            "baseName": "html",
            "type": "string"
        },
        {
            "name": "headers",
            "baseName": "headers",
            "type": "Array<Header>"
        },
        {
            "name": "attachments",
            "baseName": "attachments",
            "type": "Array<AttachmentsUpload>"
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "object"
        },
        {
            "name": "sess",
            "baseName": "sess",
            "type": "string"
        },
        {
            "name": "ip",
            "baseName": "ip",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return SubmitMessageRequest.attributeTypeMap;
    }
}

