/**
 * WildDuck API
 * WildDuck API docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';

/**
* Rules that a message must match
*/
export class Query {
    /**
    * Partial match for the From: header (case insensitive)
    */
    'from'?: string;
    /**
    * Partial match for the To:/Cc: headers (case insensitive)
    */
    'to'?: string;
    /**
    * Partial match for the Subject: header (case insensitive)
    */
    'subject'?: string;
    /**
    * Partial match for the List-ID: header (case insensitive)
    */
    'listId'?: string;
    /**
    * Fulltext search against message text
    */
    'text'?: string;
    /**
    * Does a message have to have an attachment or not
    */
    'ha'?: boolean;
    /**
    * Message size in bytes. If the value is a positive number then message needs to be larger, if negative then message needs to be smaller than abs(size) value
    */
    'size'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "from",
            "baseName": "from",
            "type": "string"
        },
        {
            "name": "to",
            "baseName": "to",
            "type": "string"
        },
        {
            "name": "subject",
            "baseName": "subject",
            "type": "string"
        },
        {
            "name": "listId",
            "baseName": "listId",
            "type": "string"
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string"
        },
        {
            "name": "ha",
            "baseName": "ha",
            "type": "boolean"
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return Query.attributeTypeMap;
    }
}

